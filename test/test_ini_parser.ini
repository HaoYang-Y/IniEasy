; 这是一个INI解析测试文件（优化版）
; 覆盖标准语法、边界情况、特殊字符、格式变体等场景


# 一、基础语法测试
; 全局键值对（无section）,会放在global中
version=1.0.0
author=张三
is_debug=on
timeout=30
pi=3.1415926


# 二、Section与键名格式测试
[server]  ; 标准section
host=localhost
port = 8080  ; 键值间空格+行内;注释
url = "http://example.com/path?a=1&b=2"  ; 双引号包裹URL（含特殊字符）

[Server]  ; 大小写不同的section（测试大小写敏感性）
port=8081  ; 与[server]的port对比

[section with space]  ; section名含空格
key=value  ; 测试含空格的section是否被正确识别

[sec=tion]  ; section名含=（特殊字符）
key=val


# 三、值的格式测试
[value_formats]
single_quoted='单引号值;含分号'  ; 单引号内的;不视为注释
mixed_quotes="引号内包含'单引号'"  ; 双引号内嵌套单引号
inner_comment="值内#不视为注释;也不是注释"  ; 引号内的#和;均为值的一部分
trailing_space="值末尾有空格 "  ; 引号内的尾随空格是否保留
empty_quoted=""  ; 空双引号（应解析为空值）
single_empty=''  ; 空单引号（应解析为空值）


# 四、多行值与续行符测试
[multi_line]
; 测试1：无续行符的多行值（依赖解析器对缩进的处理）
desc=这是第一行描述
    这是第二行描述（缩进多行）
    这是第三行描述

; 测试2：带续行符\的多行值（模拟C语言#define风格）
long_text=这是一段需要续行的长文本，\
    第二行带缩进（续行符后无空格），\
第三行无缩进（续行符后有空格）\
    第四行直接拼接（验证续行符逻辑）

; 测试3：引号内的多行值
quoted_multi="引号内的第一行\
引号内的第二行（续行符生效）\
引号内的第三行"


# 五、特殊字符测试
[special_chars]
path=C:\Windows\System32  ; 反斜杠（非转义）
key_with_tab	= tab分隔的键  ; 键名含制表符（\t）
key with space=值含 空格  ; 键名含空格，值含连续空格
value_with_equal=key=value  ; 值包含=
value_with_bracket=val[ue]  ; 值包含[]
empty_value=  ; 空值（无内容）
whitespace_value=   ; 纯空白值（三个空格）


# 六、重复与覆盖测试
[duplicate]
name=first  ; 首次出现
name=second  ; 重复键（测试覆盖策略）
priority=high
priority=medium  ; 第二次重复


# 七、边界与错误格式测试
[edge_cases]
unclosed_section  ; 无=的行（非键值对，应视为无效行）
no_value=  ; 有键无值（值为空）
[invalid_section_name=with=equal]  ; section名含=（极端情况）
[   empty_section   ]  ; section名前后有空白（测试trim效果）
key_with_quote"=value  ; 键名含未闭合双引号
mixed_quote="a'b'c"  ; 双引号内嵌套单引号（无冲突）
single_quote_with_double='x"y"z'  ; 单引号内嵌套双引号（无冲突）


# 八、续行符细节测试
[escape_line]
trailing_escape=line1\  ; 续行符后有空格（应忽略空格，正常续行）
line2  ; 上一行的续行内容
escape_in_quote="quote内的续行符\
是否生效"  ; 引号内的续行符是否被解析